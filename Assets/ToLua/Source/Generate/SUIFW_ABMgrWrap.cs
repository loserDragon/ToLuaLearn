//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class SUIFW_ABMgrWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(SUIFW.ABMgr), typeof(UnityEngine.MonoBehaviour));
		L.RegFunction("Instance", Instance);
		L.RegFunction("LoadAssetBundlePack", LoadAssetBundlePack);
		L.RegFunction("LoadAsset", LoadAsset);
		L.RegFunction("LoadAsset_ToGameObject", LoadAsset_ToGameObject);
		L.RegFunction("DisposeAllAssets", DisposeAllAssets);
		L.RegFunction("DisposeAllSceneAllAssets", DisposeAllSceneAllAssets);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Instance(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			SUIFW.ABMgr o = SUIFW.ABMgr.Instance();
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LoadAssetBundlePack(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			SUIFW.ABMgr obj = (SUIFW.ABMgr)ToLua.CheckObject<SUIFW.ABMgr>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			string arg1 = ToLua.CheckString(L, 3);
			SUIFW.DelABLoadComplete arg2 = (SUIFW.DelABLoadComplete)ToLua.CheckDelegate<SUIFW.DelABLoadComplete>(L, 4);
			obj.LoadAssetBundlePack(arg0, arg1, arg2);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LoadAsset(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 4)
			{
				SUIFW.ABMgr obj = (SUIFW.ABMgr)ToLua.CheckObject<SUIFW.ABMgr>(L, 1);
				string arg0 = ToLua.CheckString(L, 2);
				string arg1 = ToLua.CheckString(L, 3);
				string arg2 = ToLua.CheckString(L, 4);
				UnityEngine.Object o = obj.LoadAsset(arg0, arg1, arg2);
				ToLua.Push(L, o);
				return 1;
			}
			else if (count == 5)
			{
				SUIFW.ABMgr obj = (SUIFW.ABMgr)ToLua.CheckObject<SUIFW.ABMgr>(L, 1);
				string arg0 = ToLua.CheckString(L, 2);
				string arg1 = ToLua.CheckString(L, 3);
				string arg2 = ToLua.CheckString(L, 4);
				bool arg3 = LuaDLL.luaL_checkboolean(L, 5);
				UnityEngine.Object o = obj.LoadAsset(arg0, arg1, arg2, arg3);
				ToLua.Push(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: SUIFW.ABMgr.LoadAsset");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LoadAsset_ToGameObject(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 4)
			{
				SUIFW.ABMgr obj = (SUIFW.ABMgr)ToLua.CheckObject<SUIFW.ABMgr>(L, 1);
				string arg0 = ToLua.CheckString(L, 2);
				string arg1 = ToLua.CheckString(L, 3);
				string arg2 = ToLua.CheckString(L, 4);
				UnityEngine.GameObject o = obj.LoadAsset_ToGameObject(arg0, arg1, arg2);
				ToLua.PushSealed(L, o);
				return 1;
			}
			else if (count == 5)
			{
				SUIFW.ABMgr obj = (SUIFW.ABMgr)ToLua.CheckObject<SUIFW.ABMgr>(L, 1);
				string arg0 = ToLua.CheckString(L, 2);
				string arg1 = ToLua.CheckString(L, 3);
				string arg2 = ToLua.CheckString(L, 4);
				bool arg3 = LuaDLL.luaL_checkboolean(L, 5);
				UnityEngine.GameObject o = obj.LoadAsset_ToGameObject(arg0, arg1, arg2, arg3);
				ToLua.PushSealed(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: SUIFW.ABMgr.LoadAsset_ToGameObject");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DisposeAllAssets(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			SUIFW.ABMgr obj = (SUIFW.ABMgr)ToLua.CheckObject<SUIFW.ABMgr>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			obj.DisposeAllAssets(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DisposeAllSceneAllAssets(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			SUIFW.ABMgr obj = (SUIFW.ABMgr)ToLua.CheckObject<SUIFW.ABMgr>(L, 1);
			obj.DisposeAllSceneAllAssets();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

